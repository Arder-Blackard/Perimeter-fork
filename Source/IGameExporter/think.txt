Про формат вертекса:
Vect3f position;
Vect3f normal;
Vect2f uv;
DWORD bone[1-4]
1 - много объектов
2-4 - много skinned объектов

Разбиение на классы:
   1) Хранение вертекс и индекс буферов и материала. (общий для всех объектов одного типа)
   2) Хранение анимации nodes, bones. (Общий для всех объектов)
   3) Nodes,bones - класс без виртуальных функций, хранится в vector.
       Включает в себя - матрицу, фазу анимации и анимационную цепочку. 
   4) Mesh. Хранит в себе ссылку на Nodes. И указание на vertex/index buffer.
   5) Основной интерфейсный класс.
   
Основной интерфейсный класс:
   void SetPosition(Se4f pos);
   void SetScale(float scale);
   
   DWORD GetAnimationGroup(char* name);
   void SetAnimationGroup(DWORD group,char* chain);
   void SetAnimationGroup(DWORD group,float phase);//Должна использоваться редко, вместо неё 
   
   DWORD GetNode(char* name);
   void SetNodePosition(DWORD node, Se4f pos);//Вместо SetRotate, полностью устанавливает матрицу
   
   Немного не так. К нодам нельзя обратиться для установки положения,фазы и т.д. 
   Можно обратиться только к анимационной группе, которая в разных анимационных 
   цепочках включает в себя разные ноды.
   
   Но у ноды можно узнать её положение, фазу и т.д.
   
   Анимацтонные цепочки поделенны на группы для того, что-бы движок мог разбить ноды
   по индекс буферам для уменьшения количества DIP.
   Это например позволит делать лаборатории со значительно меньшим количеством 
   подобъектов в каждой фазе.
   
//////////////////
Структура записи
0) Анимационные группы
1) Materials
2) Node
3) Meshes (в вертексе каждого меша есть указатель на Node)

////
Редактирование
  Анимационные цепочки
    анимационная цепочка (list)
      название
      время: начало, конец, время проигрывания чепочки (в секундах)
      анимационная группа
    группы анимационных цепочек (справочная информация) (list)
      количество подобъектов, количество треугольников
      входящие в группу анимационные цепочки
        нужны для того, что-бы корректно отсортировать объекты по
        видимости, если надо продублировать и даже не проверять 
        те объекты, которые не видимы в текущей группе анимационных цепочек.
      
    
 Анимационные группы - минимальные единицы, которым можно выставить SetPhase.
    список node, включённых в данную анимационную группу
 Дерево node с указанием какой node к какой группе принадлежит.
    
    
 //////////////////Запись node 
 node
    name
    node_index
    position animation
    rotation animation
    scale animation
    
 mesh
    node_name
    material_name
    alpha (color?) animation
    
    Index
    
    Vertex
    {
		position
		uv
		node_index*(1..4)
	}
    
    