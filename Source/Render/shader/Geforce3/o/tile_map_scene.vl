{
static DWORD shader[]={
	0xfffe0101, 0x0045fffe, 0x42415443, 0x0000001c, 0x000000df, 0xfffe0101, 
	0x00000005, 0x0000001c, 0x00000100, 0x000000d8, 0x00000080, 0x000c0002, 
	0x00000001, 0x00000090, 0x00000000, 0x000000a0, 0x00040002, 0x00000004, 
	0x000000a8, 0x00000000, 0x000000b8, 0x00080002, 0x00000003, 0x000000a8, 
	0x00000000, 0x000000be, 0x00000002, 0x00000004, 0x000000a8, 0x00000000, 
	0x000000c3, 0x000b0002, 0x00000001, 0x000000c8, 0x00000000, 0x766e4966, 
	0x6c726f57, 0x7a695364, 0xabab0065, 0x00030001, 0x00020001, 0x00000001, 
	0x00000000, 0x6168536d, 0x00776f64, 0x00030003, 0x00040004, 0x00000001, 
	0x00000000, 0x6569566d, 0x576d0077, 0x76005056, 0x00676f46, 0x00030001, 
	0x00030001, 0x00000001, 0x00000000, 0x315f7376, 0x4d00315f, 0x6f726369, 
	0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 
	0x6c69706d, 0x35207265, 0x2e34302e, 0x322e3030, 0x00343039, 0x00000051, 
	0xa00f000d, 0x00000000, 0x3f800000, 0x00000000, 0x00000000, 0x0000001f, 
	0x80000000, 0x900f0000, 0x0000001f, 0x80000005, 0x900f0001, 0x00000009, 
	0xc0010000, 0x90e40000, 0xa0e40000, 0x00000009, 0xc0020000, 0x90e40000, 
	0xa0e40001, 0x00000009, 0xc0040000, 0x90e40000, 0xa0e40002, 0x00000009, 
	0xc0080000, 0x90e40000, 0xa0e40003, 0x00000005, 0xe0030002, 0x90e40000, 
	0xa0e4000c, 0x00000009, 0xe0010000, 0x90e40000, 0xa0e40004, 0x00000009, 
	0xe0020000, 0x90e40000, 0xa0e40005, 0x00000009, 0x80080000, 0x90e40000, 
	0xa0e4000a, 0x00000009, 0xe0040000, 0x90e40000, 0xa0e40006, 0x00000004, 
	0x80080000, 0x80ff0000, 0xa0aa000b, 0xa055000b, 0x00000009, 0xe0080000, 
	0x90e40000, 0xa0e40007, 0x0000000b, 0x80080000, 0x80ff0000, 0xa000000d, 
	0x0000000a, 0xc00f0001, 0x80ff0000, 0xa055000d, 0x00000001, 0xe0030001, 
	0x90e40001, 0x0000ffff, 
};
static ConstShaderInfo shader_info[]={
		{"fInvWorldSize",12,1},
		{"mShadow",4,4},
		{"mView",8,3},
		{"mWVP",0,4},
		{"vFog",11,1},

	};
	pShaderInfo=shader_info;
	ShaderInfoSize=sizeof(shader_info)/sizeof(shader_info[0]);
	CompileAndFound("tile_map_scene.vsl",shader);
}
