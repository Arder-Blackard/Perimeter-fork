{
static DWORD shader[]={
	0xfffe0101, 0x00a9fffe, 0x42415443, 0x0000001c, 0x0000026d, 0xfffe0101, 
	0x00000011, 0x0000001c, 0x00000100, 0x00000266, 0x00000170, 0x00110002, 
	0x00000001, 0x00000180, 0x00000000, 0x00000190, 0x00040002, 0x00000004, 
	0x00000198, 0x00000000, 0x000001a8, 0x00000002, 0x00000004, 0x00000198, 
	0x00000000, 0x000001ad, 0x00080002, 0x00000003, 0x00000198, 0x00000000, 
	0x000001b4, 0x000b0002, 0x00000003, 0x00000198, 0x00000000, 0x000001bf, 
	0x000e0002, 0x00000001, 0x000001c8, 0x00000000, 0x000001d8, 0x00120002, 
	0x00000001, 0x000001e4, 0x00000000, 0x000001f4, 0x000f0002, 0x00000001, 
	0x000001c8, 0x00000000, 0x000001fd, 0x00140002, 0x00000001, 0x000001e4, 
	0x00000000, 0x00000202, 0x00130002, 0x00000001, 0x000001e4, 0x00000000, 
	0x00000212, 0x00160002, 0x00000001, 0x000001e4, 0x00000000, 0x0000021f, 
	0x00190002, 0x00000001, 0x000001e4, 0x00000000, 0x0000022c, 0x00170002, 
	0x00000001, 0x000001c8, 0x00000000, 0x00000239, 0x001a0002, 0x00000001, 
	0x000001c8, 0x00000000, 0x00000246, 0x00150002, 0x00000001, 0x000001e4, 
	0x00000000, 0x00000251, 0x00180002, 0x00000001, 0x000001e4, 0x00000000, 
	0x0000025c, 0x00100002, 0x00000001, 0x000001c8, 0x00000000, 0x65705366, 
	0x616c7563, 0x776f5072, 0xab007265, 0x00030000, 0x00010001, 0x00000001, 
	0x00000000, 0x6168536d, 0x00776f64, 0x00030003, 0x00040004, 0x00000001, 
	0x00000000, 0x5056576d, 0x6f576d00, 0x00646c72, 0x726f576d, 0x6956646c, 
	0x76007765, 0x69626d41, 0x00746e65, 0x00030001, 0x00040001, 0x00000001, 
	0x00000000, 0x6d614376, 0x50617265, 0xab00736f, 0x00030001, 0x00030001, 
	0x00000001, 0x00000000, 0x66694476, 0x65737566, 0x6f467600, 0x4c760067, 
	0x74686769, 0x65726944, 0x6f697463, 0x5076006e, 0x746e696f, 0x6f6c6f43, 
	0x76003072, 0x6e696f50, 0x6c6f4374, 0x0031726f, 0x696f5076, 0x6150746e, 
	0x306d6172, 0x6f507600, 0x50746e69, 0x6d617261, 0x50760031, 0x746e696f, 
	0x30736f50, 0x6f507600, 0x50746e69, 0x0031736f, 0x65705376, 0x616c7563, 
	0x73760072, 0x315f315f, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 
	0x39584433, 0x61685320, 0x20726564, 0x706d6f43, 0x72656c69, 0x302e3520, 
	0x30302e34, 0x3039322e, 0xabab0034, 0x00000051, 0xa00f001b, 0x00000000, 
	0x3f800000, 0x00000000, 0x00000000, 0x0000001f, 0x80000000, 0x900f0000, 
	0x0000001f, 0x80000003, 0x900f0001, 0x0000001f, 0x80000005, 0x900f0002, 
	0x00000009, 0xc0010000, 0x90e40000, 0xa0e40000, 0x00000009, 0xc0020000, 
	0x90e40000, 0xa0e40001, 0x00000009, 0xc0040000, 0x90e40000, 0xa0e40002, 
	0x00000009, 0xc0080000, 0x90e40000, 0xa0e40003, 0x00000009, 0xe0010000, 
	0x90e40000, 0xa0e40004, 0x00000009, 0xe0020000, 0x90e40000, 0xa0e40005, 
	0x00000009, 0x80080000, 0x90e40000, 0xa0e4000d, 0x00000009, 0xe0040000, 
	0x90e40000, 0xa0e40006, 0x00000004, 0x80080000, 0x80ff0000, 0xa0aa0014, 
	0xa0550014, 0x00000009, 0xe0080000, 0x90e40000, 0xa0e40007, 0x0000000b, 
	0x80080000, 0x80ff0000, 0xa000001b, 0x0000000a, 0xc00f0001, 0x80ff0000, 
	0xa055001b, 0x00000009, 0x80010002, 0x90e40000, 0xa0e40008, 0x00000009, 
	0x80020002, 0x90e40000, 0xa0e40009, 0x00000009, 0x80040002, 0x90e40000, 
	0xa0e4000a, 0x00000008, 0x80010000, 0x90e40001, 0xa0e40008, 0x00000002, 
	0x80070001, 0x81e40002, 0xa0e40012, 0x00000008, 0x80020000, 0x90e40001, 
	0xa0e40009, 0x00000008, 0x80010003, 0x80e40001, 0x80e40001, 0x00000008, 
	0x80040000, 0x90e40001, 0xa0e4000a, 0x00000007, 0x80080000, 0x80000003, 
	0x00000008, 0x80010004, 0x80e40000, 0x80e40000, 0x00000004, 0x80070003, 
	0x80e40001, 0x80ff0000, 0xa1e40013, 0x00000007, 0x80080000, 0x80000004, 
	0x00000008, 0x80010004, 0x80e40003, 0x80e40003, 0x00000005, 0x80070001, 
	0x80e40000, 0x80ff0000, 0x00000007, 0x80080000, 0x80000004, 0x00000008, 
	0x80010000, 0x80e40001, 0xa1e40013, 0x00000005, 0x80070003, 0x80e40003, 
	0x80ff0000, 0x00000008, 0x80020000, 0x80e40001, 0x80e40003, 0x00000001, 
	0x800c0000, 0xa0000011, 0x00000010, 0x800f0000, 0x80e40000, 0x00000002, 
	0x80070003, 0x80e40002, 0xa1e40015, 0x00000001, 0x800f0001, 0xa0e4000f, 
	0x00000004, 0x800f0001, 0x80550000, 0x80e40001, 0xa0e4000e, 0x00000008, 
	0x80010003, 0x80e40003, 0x80e40003, 0x00000005, 0x800f0000, 0x80aa0000, 
	0xa0e40010, 0x00000004, 0x80080002, 0xa0550017, 0x80000003, 0xa0000017, 
	0x00000002, 0x80070002, 0x80e40002, 0xa1e40018, 0x00000006, 0x80080002, 
	0x80ff0002, 0x00000004, 0x80070001, 0xa0e40016, 0x80ff0002, 0x80e40001, 
	0x00000008, 0x80010002, 0x80e40002, 0x80e40002, 0x00000001, 0xd0080000, 
	0x80ff0001, 0x00000004, 0x80080001, 0xa055001a, 0x80000002, 0xa000001a, 
	0x00000004, 0x80070000, 0xa0e40016, 0x80ff0002, 0x80e40000, 0x00000006, 
	0x80080001, 0x80ff0001, 0x00000001, 0xd0080001, 0x80ff0000, 0x00000004, 
	0xd0070000, 0xa0e40019, 0x80ff0001, 0x80e40001, 0x00000004, 0xd0070001, 
	0xa0e40019, 0x80ff0001, 0x80e40000, 0x00000001, 0xe0030001, 0x90e40002, 
	0x0000ffff, 
};
static ConstShaderInfo shader_info[]={
		{"fSpecularPower",17,1},
		{"mShadow",4,4},
		{"mWVP",0,4},
		{"mWorld",8,3},
		{"mWorldView",11,3},
		{"vAmbient",14,1},
		{"vCameraPos",18,1},
		{"vDiffuse",15,1},
		{"vFog",20,1},
		{"vLightDirection",19,1},
		{"vPointColor0",22,1},
		{"vPointColor1",25,1},
		{"vPointParam0",23,1},
		{"vPointParam1",26,1},
		{"vPointPos0",21,1},
		{"vPointPos1",24,1},
		{"vSpecular",16,1},

	};
	pShaderInfo=shader_info;
	ShaderInfoSize=sizeof(shader_info)/sizeof(shader_info[0]);
	CompileAndFound("object_scene_light.vsl",shader);
}
