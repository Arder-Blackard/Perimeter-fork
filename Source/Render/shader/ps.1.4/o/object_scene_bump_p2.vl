{
static uint32_t shader[]={
	0xfffe0101, 0x00b3fffe, 0x42415443, 0x0000001c, 0x00000297, 0xfffe0101, 
	0x00000012, 0x0000001c, 0x00000100, 0x00000290, 0x00000184, 0x00140002, 
	0x00000001, 0x00000188, 0x00000000, 0x00000198, 0x000a0002, 0x00000003, 
	0x000001a4, 0x00000000, 0x000001b4, 0x000d0002, 0x00000002, 0x000001a4, 
	0x00000000, 0x000001bd, 0x000f0002, 0x00000002, 0x000001a4, 0x00000000, 
	0x000001c6, 0x00110002, 0x00000002, 0x000001a4, 0x00000000, 0x000001cf, 
	0x00000002, 0x00000004, 0x000001a4, 0x00000000, 0x000001d4, 0x00070002, 
	0x00000003, 0x000001a4, 0x00000000, 0x000001db, 0x00040002, 0x00000003, 
	0x000001a4, 0x00000000, 0x000001e9, 0x00150002, 0x00000001, 0x000001f4, 
	0x00000000, 0x00000204, 0x00160002, 0x00000001, 0x000001f4, 0x00000000, 
	0x00000214, 0x00170002, 0x00000001, 0x000001f4, 0x00000000, 0x0000022c, 
	0x00190002, 0x00000001, 0x000001f4, 0x00000000, 0x00000239, 0x001c0002, 
	0x00000001, 0x000001f4, 0x00000000, 0x00000246, 0x001a0002, 0x00000001, 
	0x00000188, 0x00000000, 0x00000253, 0x001d0002, 0x00000001, 0x00000188, 
	0x00000000, 0x00000260, 0x00180002, 0x00000001, 0x000001f4, 0x00000000, 
	0x0000026b, 0x001b0002, 0x00000001, 0x000001f4, 0x00000000, 0x00000276, 
	0x00130002, 0x00000001, 0x00000280, 0x00000000, 0x00353063, 0x00030001, 
	0x00040001, 0x00000001, 0x00000000, 0x766e496d, 0x6c726f57, 0xabab0064, 
	0x00030003, 0x00040004, 0x00000001, 0x00000000, 0x6168536d, 0x30776f64, 
	0x68536d00, 0x776f6461, 0x536d0031, 0x6f646168, 0x6d003277, 0x00505657, 
	0x726f576d, 0x6d00646c, 0x6c726f57, 0x4c6f5464, 0x74686769, 0x61437600, 
	0x6172656d, 0x00736f50, 0x00030001, 0x00030001, 0x00000001, 0x00000000, 
	0x67694c76, 0x69447468, 0x74636572, 0x006e6f69, 0x67694c76, 0x69447468, 
	0x74636572, 0x496e6f69, 0x6f57766e, 0x00646c72, 0x696f5076, 0x6f43746e, 
	0x30726f6c, 0x6f507600, 0x43746e69, 0x726f6c6f, 0x50760031, 0x746e696f, 
	0x61726150, 0x7600306d, 0x6e696f50, 0x72615074, 0x00316d61, 0x696f5076, 
	0x6f50746e, 0x76003073, 0x6e696f50, 0x736f5074, 0x5a760031, 0x73616942, 
	0xababab00, 0x00030000, 0x00010001, 0x00000001, 0x00000000, 0x315f7376, 
	0x4d00315f, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 
	0x65646168, 0x6f432072, 0x6c69706d, 0x35207265, 0x2e34302e, 0x322e3030, 
	0x00343039, 0x0000001f, 0x80000000, 0x900f0000, 0x0000001f, 0x80000005, 
	0x900f0001, 0x0000001f, 0x80010005, 0x900f0002, 0x0000001f, 0x80020005, 
	0x900f0003, 0x0000001f, 0x80030005, 0x900f0004, 0x00000009, 0xc0010000, 
	0x90e40000, 0xa0e40000, 0x00000009, 0xc0020000, 0x90e40000, 0xa0e40001, 
	0x00000009, 0xc0040000, 0x90e40000, 0xa0e40002, 0x00000009, 0xc0080000, 
	0x90e40000, 0xa0e40003, 0x00000009, 0xe0010002, 0x90e40000, 0xa0e4000d, 
	0x00000009, 0xe0020002, 0x90e40000, 0xa0e4000e, 0x00000009, 0xe0010003, 
	0x90e40000, 0xa0e4000f, 0x00000009, 0xe0020003, 0x90e40000, 0xa0e40010, 
	0x00000009, 0x80010000, 0x90e40000, 0xa0e40007, 0x00000009, 0x80020000, 
	0x90e40000, 0xa0e40008, 0x00000009, 0x80040000, 0x90e40000, 0xa0e40009, 
	0x00000009, 0xe0010004, 0x90e40000, 0xa0e40011, 0x00000002, 0x80070001, 
	0x81e40000, 0xa0e40015, 0x00000009, 0xe0020004, 0x90e40000, 0xa0e40012, 
	0x00000008, 0x80010002, 0x80e40001, 0x80e40001, 0x00000009, 0x80080001, 
	0x90e40000, 0xa0e40006, 0x00000007, 0x80080000, 0x80000002, 0x00000002, 
	0xe0040004, 0x80ff0001, 0xa0000013, 0x00000004, 0x80070003, 0x80e40001, 
	0x80ff0000, 0xa1e40016, 0x00000008, 0x80010002, 0xa0e40017, 0x90e40002, 
	0x00000008, 0x80010001, 0x80e40003, 0xa0e4000a, 0x00000008, 0x80020001, 
	0x80e40003, 0xa0e4000b, 0x00000008, 0x80040001, 0x80e40003, 0xa0e4000c, 
	0x00000008, 0x80020002, 0xa0e40017, 0x90e40003, 0x00000008, 0x80010003, 
	0x80e40001, 0x80e40001, 0x00000008, 0x80040002, 0xa0e40017, 0x90e40004, 
	0x00000007, 0x80080000, 0x80000003, 0x00000004, 0xd0070000, 0x80e40002, 
	0xa0e40014, 0xa0e40014, 0x00000005, 0x80070002, 0x80e40001, 0x80ff0000, 
	0x00000008, 0x80010001, 0x80e40002, 0x90e40002, 0x00000008, 0x80020001, 
	0x80e40002, 0x90e40003, 0x00000008, 0x80040001, 0x80e40002, 0x90e40004, 
	0x00000002, 0x80070002, 0x80e40000, 0xa1e4001b, 0x00000002, 0x80070000, 
	0x80e40000, 0xa1e40018, 0x00000008, 0x80010002, 0x80e40002, 0x80e40002, 
	0x00000004, 0x80080000, 0xa055001d, 0x80000002, 0xa000001d, 0x00000008, 
	0x80010000, 0x80e40000, 0x80e40000, 0x00000006, 0x80080001, 0x80ff0000, 
	0x00000004, 0x80080000, 0xa055001a, 0x80000000, 0xa000001a, 0x00000005, 
	0x80070000, 0x80ff0001, 0xa0e4001c, 0x00000006, 0x80080000, 0x80ff0000, 
	0x00000004, 0xd0070001, 0x80e40001, 0xa0e40014, 0xa0e40014, 0x00000004, 
	0xe0070005, 0xa0e40019, 0x80ff0000, 0x80e40000, 0x00000001, 0xe0030000, 
	0x90e40001, 0x00000001, 0xe0030001, 0x90e40001, 0x0000ffff, 
};
static ConstShaderInfo shader_info[]={
		{"c05",20,1},
		{"mInvWorld",10,3},
		{"mShadow0",13,2},
		{"mShadow1",15,2},
		{"mShadow2",17,2},
		{"mWVP",0,4},
		{"mWorld",7,3},
		{"mWorldToLight",4,3},
		{"vCameraPos",21,1},
		{"vLightDirection",22,1},
		{"vLightDirectionInvWorld",23,1},
		{"vPointColor0",25,1},
		{"vPointColor1",28,1},
		{"vPointParam0",26,1},
		{"vPointParam1",29,1},
		{"vPointPos0",24,1},
		{"vPointPos1",27,1},
		{"vZBias",19,1},

	};
	pShaderInfo=shader_info;
	ShaderInfoSize=sizeof(shader_info)/sizeof(shader_info[0]);
	CompileAndFound("object_scene_bump.vsl",shader);
}
