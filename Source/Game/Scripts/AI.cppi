//////////////////////////////////////////////////////////////////////////////////////////////
//	XScript definition
//	Section: AIPrm
//	Number of variables: 41
//	This is computer generated code, don't try to change it
//////////////////////////////////////////////////////////////////////////////////////////////
int ai_frame_attach_time = 10000;
int ai_building_pause = 200;
float ai_brigadier_move_to_point_offset = 40.f;
float ai_brigadier_width = 40.f;
int ai_border_offset = 6;
int ai_scan_step = 64;
float ai_scan_size_of_step_factor = 2.f;
int ai_scan_step_unable_to_find = 16;
int ai_scan_step_min = 4;
int ai_placement_iterations_per_quant = 200;
int ai_extra_dig_size = 10;
float ai_additional_toolzer_radius = 40.f;
float ai_connection_radius_tolerance = 5.f;
int cancelConstructionTime = 600000;
float moveBrigadiersToInstallFrameOffsetFactor[2] = { 0.f 
 , 0.3f };
float checkLevelingAreaFactor = 0.7f;
int checkLevelingAreaInitial = 150000;
#ifndef __XScript_struct_PlaceOpPrm__
#define __XScript_struct_PlaceOpPrm__
#pragma pack( push, __XScript_struct_pack__, 4 )
struct PlaceOpPrm {
	PlacementStrategy placementStrategy;
	int buildingsMax;
	float scanRadius;
	float boundExtraSize;
	float workFactor;
	float frameDistanceFactor;
	float enemyDistanceFactor;
	float filthDistanceFactor;
	float worldBuildingDistanceFactor;
	float corridorDistanceFactor;
	float sameTypeDistanceFactor;
	float connectBuildingFactor;
	float escapeMakingZeroLayerFactor;
	float corePlacementCompactness;
	int minimizeDiggingRadius;
};
#pragma pack( pop, __XScript_struct_pack__)
#endif  // __XScript_struct_PlaceOpPrm__
#ifndef __XScript_struct_AiPrm__
#define __XScript_struct_AiPrm__
#pragma pack( push, __XScript_struct_pack__, 4 )
struct AiPrm {
	int size;
	PlaceOpPrm data[13];

	const PlaceOpPrm& find(PlacementStrategy placementStrategy)
	{
		for(int i = 0; i < size; i++)
			if(data[i].placementStrategy == placementStrategy)
				return data[i];
		xassert(0);
		return data[0];
	}
};
#pragma pack( pop, __XScript_struct_pack__)
#endif  // __XScript_struct_AiPrm__
AiPrm aiPrm = { 13 
 , { { PLACEMENT_STRATEGY_CORE, 0, 300.f, 5.f, -5.f, -200.f, 0.f, 0.f, 0.f, 0.f, 0.f 
 , 0.f, -1000.f, 0.7f, 0 }, { PLACEMENT_STRATEGY_CORE_OFFENSIVE, 0, 300.f, 5.f, -5.f 
 , 0.f, -200.f, 0.f, 0.f, 0.f, 0.f, 0.f, -1000.f, 0.7f, 0 }, { PLACEMENT_STRATEGY_CORE_CATCHING 
 , 0, 300.f, 5.f, 0.f, 0.f, 0.f, 0.f, -100000.f, 0.f, 0.f, 0.f, -1000.f, 0.7f, 1 } 
 , { PLACEMENT_STRATEGY_CORE_CATCHING_CORRIDOR, 0, 300.f, 5.f, 0.f, 0.f, 0.f, 0.f, 0.f 
 , -100000.f, 0.f, 0.f, -1000000.f, 1.f, 1 }, { PLACEMENT_STRATEGY_CORE_AWAY_FROM_ENEMY 
 , 0, 300.f, 5.f, -5.f, 0.f, 200.f, 0.f, 0.f, 0.f, 0.f, 0.f, -1000.f, 0.7f, 0 }, { PLACEMENT_STRATEGY_PLANT 
 , 0, 0.f, 5.f, -5.f, -1.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 1.f, 0 }, { PLACEMENT_STRATEGY_COMMANDER 
 , 5, 0.f, 5.f, -5.f, -1.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 1.f, 0 }, { PLACEMENT_STRATEGY_STATION 
 , 1, 0.f, 5.f, -5.f, -1.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 1.f, 0 }, { PLACEMENT_STRATEGY_GUN 
 , 0, 200.f, 2.f, -1000.f, 0.f, -200.f, -200.f, 0.f, 0.f, -50000.f, 0.f, 0.f, 1.f, 0 
  }, { PLACEMENT_STRATEGY_GUN_TO_ENEMY, 0, 200.f, 2.f, -1000.f, 0.f, -200.f, 0.f, 0.f 
 , 0.f, -50000.f, 0.f, 0.f, 1.f, 0 }, { PLACEMENT_STRATEGY_GUN_TO_FILTH, 0, 200.f, 2.f 
 , -1000.f, 0.f, 0.f, -200.f, 0.f, 0.f, -50000.f, 0.f, 0.f, 1.f, 0 }, { PLACEMENT_STRATEGY_GUN_TO_ENEMY_BUILDING 
 , 0, 200.f, 2.f, -1000.f, 0.f, -100000.f, 0.f, 0.f, 0.f, -10000.f, 0.f, 0.f, 1.f, 0 
  }, { PLACEMENT_STRATEGY_SPECIAL_WEAPON, 1, 200.f, 2.f, -5.f, 0.f, -200.f, 0.f, 0.f 
 , 0.f, 0.f, 0.f, 0.f, 1.f, 0 } } };
#ifndef __XScript_struct_ClusterFindPrm__
#define __XScript_struct_ClusterFindPrm__
#pragma pack( push, __XScript_struct_pack__, 4 )
struct ClusterFindPrm {
	int clusterSize;
	int rebuildQuants;
	int enableSmoothing;
	int levelOfDetail;
	int maxColor;
	int minimizeMinLevel;
	int showMap;
	int gunExtraRadius;
	int fieldExtraRadius;
	int chaosSmoothSteps;
	int ignorePathFindMinDistance2;
};
#pragma pack( pop, __XScript_struct_pack__)
#endif  // __XScript_struct_ClusterFindPrm__
ClusterFindPrm terrainPathFind = { 10 
 , 12, 1, 8, 64, 2, 0, 0, 0, 6, 40000 };
ClusterFindPrm defenceMapPathFind = { 10 
 , 40, 1, 8, 64, 2, 0, 100, 100, 6, 40000 };
float squad_described_radius_min = 16.f;
float squad_described_radius_max = 100.f;
float squad_speed_correction_relaxation_time_inv = 0.25f;
float squad_speed_factor_modulation = 0.5f;
float squad_position_generator_circle_tolerance = 1.f;
float squad_find_best_target_scan_radius = 1500.f;
float squad_contact_radius_factor = 1.2f;
float squad_contact_distance_tolerance = 1.f;
float squad_reposition_to_attack_radius_tolerance = 5.e-002f;
int patrol_mode_attack_time = 60000;
int patrol_mode_ignore_targets_time = 5000;
int squad_targets_scan_period = 500;
int squad_targets_clean_period = 2000;
int squad_technician_targets_scan_period = 200;
int static_gun_targets_scan_period = 1000;
int squad_reposition_to_attack_delay = 3000;
int squad_reposition_to_attack_delay_flying = 6000;
float squad_reposition_to_attack_velocity_factor = 2.e-002f;
float squad_velocity_avr_tau = 0.3f;
int targetEventTime = 1000;
int speechDurationAddition = 1000;

#ifdef _PRM_EDIT_
struct AIPrm_ParameterSection : ParameterSection
{
	AIPrm_ParameterSection() : ParameterSection("AIPrm")
{
	add_dependency(".\\Scripts\\AI.prm");
	add_dependency(".\\Scripts\\UnitAttribute.inl");
	sourceCRC = 2450469852;
	description = 878563319;
	reserve(41);
	add(&ai_frame_attach_time, "ai_frame_attach_time");
	add(&ai_building_pause, "ai_building_pause");
	add(&ai_brigadier_move_to_point_offset, "ai_brigadier_move_to_point_offset");
	add(&ai_brigadier_width, "ai_brigadier_width");
	add(&ai_border_offset, "ai_border_offset");
	add(&ai_scan_step, "ai_scan_step");
	add(&ai_scan_size_of_step_factor, "ai_scan_size_of_step_factor");
	add(&ai_scan_step_unable_to_find, "ai_scan_step_unable_to_find");
	add(&ai_scan_step_min, "ai_scan_step_min");
	add(&ai_placement_iterations_per_quant, "ai_placement_iterations_per_quant");
	add(&ai_extra_dig_size, "ai_extra_dig_size");
	add(&ai_additional_toolzer_radius, "ai_additional_toolzer_radius");
	add(&ai_connection_radius_tolerance, "ai_connection_radius_tolerance");
	add(&cancelConstructionTime, "cancelConstructionTime");
	add(&moveBrigadiersToInstallFrameOffsetFactor, "moveBrigadiersToInstallFrameOffsetFactor");
	add(&checkLevelingAreaFactor, "checkLevelingAreaFactor");
	add(&checkLevelingAreaInitial, "checkLevelingAreaInitial");
	add(&aiPrm, "aiPrm");
	add(&terrainPathFind, "terrainPathFind");
	add(&defenceMapPathFind, "defenceMapPathFind");
	add(&squad_described_radius_min, "squad_described_radius_min");
	add(&squad_described_radius_max, "squad_described_radius_max");
	add(&squad_speed_correction_relaxation_time_inv, "squad_speed_correction_relaxation_time_inv");
	add(&squad_speed_factor_modulation, "squad_speed_factor_modulation");
	add(&squad_position_generator_circle_tolerance, "squad_position_generator_circle_tolerance");
	add(&squad_find_best_target_scan_radius, "squad_find_best_target_scan_radius");
	add(&squad_contact_radius_factor, "squad_contact_radius_factor");
	add(&squad_contact_distance_tolerance, "squad_contact_distance_tolerance");
	add(&squad_reposition_to_attack_radius_tolerance, "squad_reposition_to_attack_radius_tolerance");
	add(&patrol_mode_attack_time, "patrol_mode_attack_time");
	add(&patrol_mode_ignore_targets_time, "patrol_mode_ignore_targets_time");
	add(&squad_targets_scan_period, "squad_targets_scan_period");
	add(&squad_targets_clean_period, "squad_targets_clean_period");
	add(&squad_technician_targets_scan_period, "squad_technician_targets_scan_period");
	add(&static_gun_targets_scan_period, "static_gun_targets_scan_period");
	add(&squad_reposition_to_attack_delay, "squad_reposition_to_attack_delay");
	add(&squad_reposition_to_attack_delay_flying, "squad_reposition_to_attack_delay_flying");
	add(&squad_reposition_to_attack_velocity_factor, "squad_reposition_to_attack_velocity_factor");
	add(&squad_velocity_avr_tau, "squad_velocity_avr_tau");
	add(&targetEventTime, "targetEventTime");
	add(&speechDurationAddition, "speechDurationAddition");
	add_parameter_section(this);
}
};
static AIPrm_ParameterSection AIPrm_ParameterSectionObject;
#endif  //  _PRM_EDIT_
//////////////////////////////////////////////////////////////////////////////////////////////
//	XScript end: AIPrm
//////////////////////////////////////////////////////////////////////////////////////////////
