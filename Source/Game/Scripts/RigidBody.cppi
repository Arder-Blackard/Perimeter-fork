//////////////////////////////////////////////////////////////////////////////////////////////
//	XScript definition
//	Section: RigidBodyPrm
//	Number of variables: 35
//	This is computer generated code, don't try to change it
//////////////////////////////////////////////////////////////////////////////////////////////
int closestFeaturesHTsizeMax = 500;
float dz_max_avr_tau = 0.1f;
float deep_penetration_dz = 10.f;
float average_forward_velocity_tau = 0.7f;
float obstacle_turn_avr_tau = 0.05f;
float general_velocity_factor_intermediate = 0.9f;
float is_point_reached_radius_max_intermediate = 40.f;
float collision_detection_epsilon = 2.f;
float collision_resolve_velocity_tolerance = 0.1f;
float collision_resolve_penetration_relaxation_factor = -0.3f;
float collision_resolve_penetration_relaxation_min = -4.f;
float collision_resolve_velocity_relaxation = 0.1f;
float collision_resolve_restitution_plus_one = 1.2f;
int collision_resolve_iterations_per_contact = 4;
float kangaroo_mode_avr_tau = 0.3f;
float kangaroo_mode_avr_threshould = 0.2f;
float kangaroo_max_height_switch = 500.f;
float kangaroo_min_mass_switch = 0.00001f;
float kangaroo_avoid_stoopor_acceleration = 0.f;
float kangaroo_avoid_stoopor_epsilon = 1.f;
float analyze_terrain_points_density = 0.5f;
float analyze_terrain_Dxy_minimal = 6.f;
int analyze_terrain_upper_dz_max = 20;
int analyze_terrain_lower_dz_min = -50;
float steering_control_negative_rudder_threshould = -0.95f;
float steering_control_min_distance = 1.f;
float test_missile_shot_distance2 = 2500.f;
float average_movement_tau = 0.1f;
float average_movement_threshould = 0.5f;
int sleep_time = 2000;
float fieldPathFindFactor = 0.7f;
int fieldPathFindRadius = 100;
float diggingModeDamping = 0.1f;
int diggingModeDelay = 500;
#ifndef __XScript_struct_HarmonicOscillator__
#define __XScript_struct_HarmonicOscillator__
#pragma pack( push, __XScript_struct_pack__, 4 )
struct HarmonicOscillator {
	float decay;
	float omega;
	float amplitude;
	int N;
	float A[4];

	float operator()(float t){ // in seconds
		float phase = omega*t;
		float f = 0;
		for(int i = 0; i < N; i++)
			f += A[i]*xm::sin(phase*(i + 1));
		return f*xm::exp(-t*decay)*amplitude; 
	}
};
#pragma pack( pop, __XScript_struct_pack__)
#endif  // __XScript_struct_HarmonicOscillator__
#ifndef __XScript_struct_CameraExplodingPrm__
#define __XScript_struct_CameraExplodingPrm__
#pragma pack( push, __XScript_struct_pack__, 4 )
struct CameraExplodingPrm {
	HarmonicOscillator x;
	HarmonicOscillator y;
	HarmonicOscillator z;
};
#pragma pack( pop, __XScript_struct_pack__)
#endif  // __XScript_struct_CameraExplodingPrm__
CameraExplodingPrm cameraExplodingPrm = { { 0.f 
 , 100.f, 20.f, 4, { 1.f, 0.5f, 0.3f, 0.1f } }, { 0.f, 10.f, 20.f, 4, { 1.f, 0.5f, 0.3f 
 , 0.1f } }, { 0.f, 99.f, 20.f, 4, { 1.f, 0.5f, 0.3f, 0.1f } } };

#ifdef _PRM_EDIT_
struct RigidBodyPrm_ParameterSection : ParameterSection
{
	RigidBodyPrm_ParameterSection() : ParameterSection("RigidBodyPrm")
{
	add_dependency(".\\Scripts\\RigidBody.prm");
	description = 1512134152;
	reserve(35);
	add(&closestFeaturesHTsizeMax, "closestFeaturesHTsizeMax", 3759651819);
	add(&dz_max_avr_tau, "dz_max_avr_tau", 1840663301);
	add(&deep_penetration_dz, "deep_penetration_dz", 384016262);
	add(&average_forward_velocity_tau, "average_forward_velocity_tau", 1067333767);
	add(&obstacle_turn_avr_tau, "obstacle_turn_avr_tau", 2658951196);
	add(&general_velocity_factor_intermediate, "general_velocity_factor_intermediate", 872742554);
	add(&is_point_reached_radius_max_intermediate, "is_point_reached_radius_max_intermediate", 3510208713);
	add(&collision_detection_epsilon, "collision_detection_epsilon", 4114123262);
	add(&collision_resolve_velocity_tolerance, "collision_resolve_velocity_tolerance", 3938574923);
	add(&collision_resolve_penetration_relaxation_factor, "collision_resolve_penetration_relaxation_factor", 868243833);
	add(&collision_resolve_penetration_relaxation_min, "collision_resolve_penetration_relaxation_min", 323726177);
	add(&collision_resolve_velocity_relaxation, "collision_resolve_velocity_relaxation", 3955049544);
	add(&collision_resolve_restitution_plus_one, "collision_resolve_restitution_plus_one", 3448247385);
	add(&collision_resolve_iterations_per_contact, "collision_resolve_iterations_per_contact", 1163659105);
	add(&kangaroo_mode_avr_tau, "kangaroo_mode_avr_tau", 4169709);
	add(&kangaroo_mode_avr_threshould, "kangaroo_mode_avr_threshould", 4023066822);
	add(&kangaroo_max_height_switch, "kangaroo_max_height_switch", 607155863);
	add(&kangaroo_min_mass_switch, "kangaroo_min_mass_switch", 1249479112);
	add(&kangaroo_avoid_stoopor_acceleration, "kangaroo_avoid_stoopor_acceleration", 122470249);
	add(&kangaroo_avoid_stoopor_epsilon, "kangaroo_avoid_stoopor_epsilon", 1165629482);
	add(&analyze_terrain_points_density, "analyze_terrain_points_density", 2538368182);
	add(&analyze_terrain_Dxy_minimal, "analyze_terrain_Dxy_minimal", 2345858391);
	add(&analyze_terrain_upper_dz_max, "analyze_terrain_upper_dz_max", 2917712761);
	add(&analyze_terrain_lower_dz_min, "analyze_terrain_lower_dz_min", 3075588928);
	add(&steering_control_negative_rudder_threshould, "steering_control_negative_rudder_threshould", 4063761308);
	add(&steering_control_min_distance, "steering_control_min_distance", 1366160445);
	add(&test_missile_shot_distance2, "test_missile_shot_distance2", 1472353308);
	add(&average_movement_tau, "average_movement_tau", 527905937);
	add(&average_movement_threshould, "average_movement_threshould", 2355165470);
	add(&sleep_time, "sleep_time", 1471205528);
	add(&fieldPathFindFactor, "fieldPathFindFactor", 3608028200);
	add(&fieldPathFindRadius, "fieldPathFindRadius", 799719474);
	add(&diggingModeDamping, "diggingModeDamping", 1333712917);
	add(&diggingModeDelay, "diggingModeDelay", 251916561);
	add(&cameraExplodingPrm, "cameraExplodingPrm", 3954720490);
	add_parameter_section(this);
}
};
static RigidBodyPrm_ParameterSection RigidBodyPrm_ParameterSectionObject;
#endif  //  _PRM_EDIT_
//////////////////////////////////////////////////////////////////////////////////////////////
//	XScript end: RigidBodyPrm
//////////////////////////////////////////////////////////////////////////////////////////////
